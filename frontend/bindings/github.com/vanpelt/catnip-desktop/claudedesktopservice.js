// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

/**
 * ClaudeDesktopService wraps the existing Claude service for Wails exposure
 * @module
 */

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Call as $Call, CancellablePromise as $CancellablePromise, Create as $Create } from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as models$0 from "../catnip/internal/models/models.js";

/**
 * CreateCompletion creates a completion request to Claude
 * @param {models$0.CreateCompletionRequest | null} req
 * @returns {$CancellablePromise<models$0.CreateCompletionResponse | null>}
 */
export function CreateCompletion(req) {
    return $Call.ByID(1745934281, req).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType1($result);
    }));
}

/**
 * GetAllWorktreeSessionSummaries gets all session summaries
 * @returns {$CancellablePromise<{ [_: string]: models$0.ClaudeSessionSummary | null }>}
 */
export function GetAllWorktreeSessionSummaries() {
    return $Call.ByID(1228636549).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType4($result);
    }));
}

/**
 * GetClaudeSettings gets current Claude settings
 * @returns {$CancellablePromise<models$0.ClaudeSettings | null>}
 */
export function GetClaudeSettings() {
    return $Call.ByID(1996421190).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType6($result);
    }));
}

/**
 * GetFullSessionData gets complete session data with messages
 * @param {string} worktreePath
 * @param {boolean} includeFullData
 * @returns {$CancellablePromise<models$0.FullSessionData | null>}
 */
export function GetFullSessionData(worktreePath, includeFullData) {
    return $Call.ByID(691385812, worktreePath, includeFullData).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType8($result);
    }));
}

/**
 * GetLatestTodos gets the most recent todos from a session
 * @param {string} worktreePath
 * @returns {$CancellablePromise<models$0.Todo[]>}
 */
export function GetLatestTodos(worktreePath) {
    return $Call.ByID(2118613131, worktreePath).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType10($result);
    }));
}

/**
 * GetWorktreeSessionSummary gets session summary for a specific worktree
 * @param {string} worktreePath
 * @returns {$CancellablePromise<models$0.ClaudeSessionSummary | null>}
 */
export function GetWorktreeSessionSummary(worktreePath) {
    return $Call.ByID(981275256, worktreePath).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType3($result);
    }));
}

/**
 * UpdateClaudeSettings updates Claude settings
 * @param {models$0.ClaudeSettingsUpdateRequest | null} req
 * @returns {$CancellablePromise<models$0.ClaudeSettings | null>}
 */
export function UpdateClaudeSettings(req) {
    return $Call.ByID(2524560961, req).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType6($result);
    }));
}

// Private type creation functions
const $$createType0 = models$0.CreateCompletionResponse.createFrom;
const $$createType1 = $Create.Nullable($$createType0);
const $$createType2 = models$0.ClaudeSessionSummary.createFrom;
const $$createType3 = $Create.Nullable($$createType2);
const $$createType4 = $Create.Map($Create.Any, $$createType3);
const $$createType5 = models$0.ClaudeSettings.createFrom;
const $$createType6 = $Create.Nullable($$createType5);
const $$createType7 = models$0.FullSessionData.createFrom;
const $$createType8 = $Create.Nullable($$createType7);
const $$createType9 = models$0.Todo.createFrom;
const $$createType10 = $Create.Array($$createType9);
